// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EffCoreProjesi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250529171140_SeedOgretmenVerileri")]
    partial class SeedOgretmenVerileri
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EffCoreProjesi.Models.Kurs", b =>
                {
                    b.Property<int>("KursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KursId"));

                    b.Property<string>("Baslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgretmenId")
                        .HasColumnType("int");

                    b.HasKey("KursId");

                    b.HasIndex("OgretmenId");

                    b.ToTable("Kurslar");
                });

            modelBuilder.Entity("EffCoreProjesi.Models.KursKayit", b =>
                {
                    b.Property<int>("KayitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KayitId"));

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.HasKey("KayitId");

                    b.HasIndex("KursId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("KursKayitlari");
                });

            modelBuilder.Entity("EffCoreProjesi.Models.Ogrenci", b =>
                {
                    b.Property<int>("OgrenciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgrenciId"));

                    b.Property<string>("Eposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OgrenciAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrenciSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgrenciId");

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("EffCoreProjesi.Models.Ogretmen", b =>
                {
                    b.Property<int>("OgretmenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgretmenId"));

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgretmenId");

                    b.ToTable("Ogretmenler");

                    b.HasData(
                        new
                        {
                            OgretmenId = 1,
                            Ad = "Ayşe",
                            BaslamaTarihi = new DateTime(2025, 5, 29, 20, 11, 40, 138, DateTimeKind.Local).AddTicks(2451),
                            Eposta = "ayse.yilmaz@example.com",
                            Soyad = "Yılmaz",
                            Telefon = "0555 123 45 67"
                        },
                        new
                        {
                            OgretmenId = 2,
                            Ad = "Mehmet",
                            BaslamaTarihi = new DateTime(2025, 4, 29, 20, 11, 40, 140, DateTimeKind.Local).AddTicks(523),
                            Eposta = "mehmet.kara@example.com",
                            Soyad = "Kara",
                            Telefon = "0532 456 78 90"
                        },
                        new
                        {
                            OgretmenId = 3,
                            Ad = "Elif",
                            BaslamaTarihi = new DateTime(2025, 3, 30, 20, 11, 40, 140, DateTimeKind.Local).AddTicks(581),
                            Eposta = "elif.demir@example.com",
                            Soyad = "Demir",
                            Telefon = "0506 111 22 33"
                        },
                        new
                        {
                            OgretmenId = 4,
                            Ad = "Ahmet",
                            BaslamaTarihi = new DateTime(2025, 2, 28, 20, 11, 40, 140, DateTimeKind.Local).AddTicks(585),
                            Eposta = "ahmet.sahin@example.com",
                            Soyad = "Şahin",
                            Telefon = "0544 333 22 11"
                        },
                        new
                        {
                            OgretmenId = 5,
                            Ad = "Zeynep",
                            BaslamaTarihi = new DateTime(2025, 1, 29, 20, 11, 40, 140, DateTimeKind.Local).AddTicks(587),
                            Eposta = "zeynep.aslan@example.com",
                            Soyad = "Aslan",
                            Telefon = "0530 876 54 32"
                        },
                        new
                        {
                            OgretmenId = 6,
                            Ad = "Kemal",
                            BaslamaTarihi = new DateTime(2025, 5, 19, 20, 11, 40, 140, DateTimeKind.Local).AddTicks(589),
                            Eposta = "kemal.aydin@example.com",
                            Soyad = "Aydın",
                            Telefon = "0553 345 67 89"
                        },
                        new
                        {
                            OgretmenId = 7,
                            Ad = "Fatma",
                            BaslamaTarihi = new DateTime(2025, 3, 15, 20, 11, 40, 140, DateTimeKind.Local).AddTicks(591),
                            Eposta = "fatma.gunes@example.com",
                            Soyad = "Güneş",
                            Telefon = "0541 234 56 78"
                        },
                        new
                        {
                            OgretmenId = 8,
                            Ad = "Yusuf",
                            BaslamaTarihi = new DateTime(2025, 5, 14, 20, 11, 40, 140, DateTimeKind.Local).AddTicks(593),
                            Eposta = "yusuf.kilic@example.com",
                            Soyad = "Kılıç",
                            Telefon = "0539 999 88 77"
                        });
                });

            modelBuilder.Entity("EffCoreProjesi.Models.Kurs", b =>
                {
                    b.HasOne("EffCoreProjesi.Models.Ogretmen", "Ogretmen")
                        .WithMany("Kurslar")
                        .HasForeignKey("OgretmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogretmen");
                });

            modelBuilder.Entity("EffCoreProjesi.Models.KursKayit", b =>
                {
                    b.HasOne("EffCoreProjesi.Models.Kurs", "Kurs")
                        .WithMany("KursKayitlari")
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EffCoreProjesi.Models.Ogrenci", "Ogrenci")
                        .WithMany("KursKayitlari")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kurs");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("EffCoreProjesi.Models.Kurs", b =>
                {
                    b.Navigation("KursKayitlari");
                });

            modelBuilder.Entity("EffCoreProjesi.Models.Ogrenci", b =>
                {
                    b.Navigation("KursKayitlari");
                });

            modelBuilder.Entity("EffCoreProjesi.Models.Ogretmen", b =>
                {
                    b.Navigation("Kurslar");
                });
#pragma warning restore 612, 618
        }
    }
}
